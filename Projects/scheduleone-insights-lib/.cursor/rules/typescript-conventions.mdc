---
description: 
globs: 
alwaysApply: true
---
strict-typing
Every parameter, return value, and variable must have an explicit type annotation.
Do not rely on implicit inference.

no-any
Disallow both implicit and explicit any. If you cant type something precisely,
model it until you can (or use a temporary unknown and narrow it).

interface-over-type
Always define object shapes and API contracts as interface (more performant
for extension and declaration merging). Only use type for advanced cases
(unions, mapped types) when interface isnt sufficient.

use-custom-types
Whenever a custom type or interface already exists, reuse it rather than redefining
inline. This keeps types DRY and consistent.

readonly-properties
Mark every property readonly if it should never be mutated after construction.


